package com.prokarma.sourcerer.controller;

import static org.mockito.Matchers.any;
import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.util.List;

import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import com.prokarma.sourcerer.dto.CandidateSelfRating;
import com.prokarma.sourcerer.service.CandidateSelfRatingService;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration({ "classpath:application-context.xml" })
@WebAppConfiguration
<<<<<<< .mine
||||||| .r97
=======

>>>>>>> .r106
public class CandidateSelfRatingControllerTest {

	private MockMvc mockMvc;

	@InjectMocks
	private CandidateSelfRatingController controller = new CandidateSelfRatingController();

	@Mock
	private CandidateSelfRatingService candidateSelfRatingService;

	@Autowired
	WebApplicationContext wac;

	@Before
	public void setup() {
		MockitoAnnotations.initMocks(this);
		mockMvc = MockMvcBuilders.standaloneSetup(this.candidateSelfRatingService).build();
		MockMvcBuilders.webAppContextSetup(this.wac).dispatchOptions(true).build();
		MockMvcBuilders.webAppContextSetup(this.wac).dispatchOptions(true).build();
	}

	@Test
	@Ignore
	public void submitTechnologyRatingTest_pass() throws Exception {
		String Json = "[{" + "\"cid\": \"28\"," + "\"technolgyId\":3," + "\"ratingId\": \"3\"" + "}]";
		when(candidateSelfRatingService.insertSelfRating(any(List.class))).thenReturn(true);

		mockMvc.perform(post("/rating/submit").contentType(MediaType.APPLICATION_JSON).content(Json)
				.accept(MediaType.APPLICATION_JSON)).andExpect(status().isOk());

	}
}
