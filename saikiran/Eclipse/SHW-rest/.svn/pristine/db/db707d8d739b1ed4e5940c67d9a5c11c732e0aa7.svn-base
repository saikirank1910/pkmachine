package com.prokarma.sourcerer.utils;

import static org.junit.Assert.assertEquals;

import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.prokarma.sourcerer.dto.Candidate;
import com.prokarma.sourcerer.dto.Email;
import com.prokarma.sourcerer.dto.PanelAssignee;
import com.prokarma.sourcerer.dto.PanelEvaluation;
import com.prokarma.sourcerer.dto.User;


@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:application-context.xml" })
public class GenerateMessageTest {
	
	@Autowired
	private GenerateMessage generateMessage;

	@Test
	public void sendEmailToCandidateTest() {
		Candidate candidate = new Candidate();
		candidate.setEmail("Hello@gmail.com");
		candidate.setToken(1234);
		candidate.setCname("saikiran");
		
		Email email = generateMessage.sendEmailToCandidate(candidate);
		
		Email emailExpected = new Email();
		emailExpected.setTo(candidate.getEmail());
		emailExpected.setFrom("noreplyshw@gmail.com");
		emailExpected.setSubject("Successfully Registered for the Interview process @ProKarma");
		emailExpected.setMessage("Dear " + candidate.getCname()
				+ ", Congratulations!! We are glad to inform you that you have been successfully registered for attending the interview process in our Company.Please follow the URL to give your self evaluation process http://localhost:9000/#!/self. The token ID which is mandatory to attend the interview process is "
				+ candidate.getToken() + ".Regards,Team Prokarma.");
		
		
		assertEquals(emailExpected,email);
	}
	@Test
	public void sendEmailToPanelTest() {
		PanelAssignee panelAssignee =new PanelAssignee();
		panelAssignee.setPanelName("hello@gmail.com");
		panelAssignee.setToken(1234);
		Email email = generateMessage.sendEmailToPanel(panelAssignee);
		
		Email emailExpected = new Email();
		emailExpected.setTo(panelAssignee.getPanelEmail());
		emailExpected.setFrom("noreplyshw@gmail.com");
		emailExpected.setSubject("Interview scheduled");
		emailExpected.setMessage("Hi " + panelAssignee.getPanelName()
				+ ", You are requested to take the interview for the Candidate and your token is "
				+ panelAssignee.getToken()
				+ ". Please login in over this URL http://localhost:9000/#!/panelMemberAuthentication and submit your feedback");
		
		assertEquals(emailExpected,email);
	}
	
	@Test
	public void sendForgotPasswordToUserTest() {
		User user =new User();
		user.setEmail("Hello@gmail.com");
		user.setPassword("Hello");
		
		Email email = generateMessage.sendForgotPasswordToUser(user);
		Email emailExpected = new Email();
		emailExpected.setTo(user.getEmail());
		emailExpected.setFrom("noreplyshw@gmail.com");
		emailExpected.setSubject("request for password");
		emailExpected.setMessage("Hi user, you just requested for password. Your password is " + user.getPassword());
		assertEquals(emailExpected,email);
	}
	@Test
	public void sendMailToSuperAdminRegardingPanelFeedbackStatusTest() 
	{
		PanelEvaluation panelEvaluation = new PanelEvaluation();
		panelEvaluation.setPanelMemberName("panel");
		panelEvaluation.setCandidateName("candidate");
		panelEvaluation.setStatus("status");
		panelEvaluation.setComment("comments");
		Email email = generateMessage.sendMailToSuperAdminRegardingPanelFeedbackStatus(panelEvaluation);
		
		
		Email emailExpected = new Email();
		emailExpected.setTo("skataram@prokarma.com");
		emailExpected.setFrom("noreplyshw@gmail.com");
		emailExpected.setSubject("Panel Member submited feedback");
		emailExpected.setMessage("Hi Admin, " + panelEvaluation.getPanelMemberName() + " submitted feedback on "
				+ panelEvaluation.getCandidateName() + " and his STATUS his " + panelEvaluation.getStatus()+" his COMMENTS are "+panelEvaluation.getComment());
		assertEquals(emailExpected,email);
	}

}
