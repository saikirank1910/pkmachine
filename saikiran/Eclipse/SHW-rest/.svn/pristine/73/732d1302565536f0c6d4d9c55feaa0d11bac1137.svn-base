package com.prokarma.sourcerer.dao.impl;

import static org.junit.Assert.assertEquals;

import java.sql.ResultSet;
import java.sql.SQLException;

import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

import com.prokarma.sourcerer.dao.PanelAssigneeDao;
import com.prokarma.sourcerer.dto.PanelAssignee;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration({ "classpath:application-context.xml" })
@Transactional
public class PanelAssigneeDaoImplTest {

	@Autowired
	private PanelAssigneeDao panelAssigneeDao;
	@Autowired
	NamedParameterJdbcTemplate namedParameterJdbcTemplate;

	@Test
	public void testSavePanelMember() {
		PanelAssignee panelAssignee = new PanelAssignee();
		panelAssignee.setPanelId(1);
		panelAssignee.setCandidateId(4231);
		panelAssignee.setToken(9999);
		panelAssignee.setPanelEmail("qwerty@gmail.com");
		panelAssignee.setModeOfInterview("face-to-face");
		panelAssigneeDao.savePanelMember(panelAssignee);
		final MapSqlParameterSource params = new MapSqlParameterSource();
		params.addValue("panel_email", "qwerty@gmail.com");
		PanelAssignee addPanelAssignee = namedParameterJdbcTemplate.queryForObject(
				"select * from panel_assignee where panel_email=:panel_email", params, new RowMapper<PanelAssignee>() {
					public PanelAssignee mapRow(ResultSet resultset, int index) throws SQLException {
						PanelAssignee resultPanelAssignee = new PanelAssignee();
						resultPanelAssignee.setPanelId(resultset.getInt(2));
						resultPanelAssignee.setCandidateId(resultset.getInt(3));
						resultPanelAssignee.setToken(resultset.getInt(4));
						resultPanelAssignee.setPanelEmail(resultset.getString(6));
						resultPanelAssignee.setModeOfInterview(resultset.getString(7));
						return resultPanelAssignee;
					}
				});
		assertEquals(panelAssignee.getPanelEmail(), addPanelAssignee.getPanelEmail());
	}

}
