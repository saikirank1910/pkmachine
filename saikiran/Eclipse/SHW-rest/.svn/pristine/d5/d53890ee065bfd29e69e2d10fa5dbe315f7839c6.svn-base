package com.prokarma.sourcerer.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Component;

import com.prokarma.sourcerer.dao.PanelAssigneeDao;
import com.prokarma.sourcerer.dto.PanelAssignee;

@Component
public class PanelAssigneeDaoImpl implements PanelAssigneeDao {
	@Autowired
	private NamedParameterJdbcTemplate namedParameterJdbcTemplate;

	public List<PanelAssignee> verifyPanel(PanelAssignee panelAssignee) {

		final String sql = "select pid,cid,isvisited,token,round from panel_assignee where panel_email=:email";
		final MapSqlParameterSource params = new MapSqlParameterSource();
		params.addValue("email", panelAssignee.getPanelEmail());
		//System.out.println(panelAssignee.getPanel_email());
		return namedParameterJdbcTemplate.query(sql, params, new RowMapper<PanelAssignee>() {

			public PanelAssignee mapRow(ResultSet resultSet, int arg1) throws SQLException {
				PanelAssignee panelAssignee = new PanelAssignee();
				panelAssignee.setCandidateId(resultSet.getInt(2));
				panelAssignee.setPanelId(resultSet.getInt(1));
				panelAssignee.setIsVisited(resultSet.getInt(3));
				panelAssignee.setToken(resultSet.getInt(4));
				panelAssignee.setRound(resultSet.getInt(5));
				return panelAssignee;
			}
		});

	}

	public Boolean savePanelMember(PanelAssignee panelAssignee) {
		String sql = "insert into panel_assignee values(ASSIGNE_SEQ.nextval,:pid,:cid,:token,0,:email,:modeOfInterview,:round)";
		final MapSqlParameterSource params = new MapSqlParameterSource();
		params.addValue("pid", panelAssignee.getPanelId());
		params.addValue("cid", panelAssignee.getCandidateId());
		params.addValue("token", panelAssignee.getToken());
		params.addValue("email", panelAssignee.getPanelEmail());
		params.addValue("modeOfInterview", panelAssignee.getModeOfInterview());
		params.addValue("round",panelAssignee.getRound());
		int result = namedParameterJdbcTemplate.update(sql, params);
		if (result == 1) {
			return true;
		}
		return false;
	}

	public String getPanelEmail(String panelName) {
	String sql="select email from panel where panel_member=:";
		return null;
	}

	public Boolean updatePanelAssigneeStatus(int cid,int status) {
		final MapSqlParameterSource params = new MapSqlParameterSource();
		params.addValue("status",status);
		params.addValue("id",cid);
		int rows = namedParameterJdbcTemplate.update(
				"update candidate set isvisited = :status  where cid= :id", params);
		if (rows == 0) {
			return false;
		} else
			return true;
	}
}
