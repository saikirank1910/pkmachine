package com.prokarma.sourcerer.controller;

import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.prokarma.sourcerer.dto.PersonalTrait;
import com.prokarma.sourcerer.service.PersonalTraitsService;

@RestController
@RequestMapping("/superadmin")
public class PersonalTraitsController {

private static org.apache.log4j.Logger logger = Logger.getLogger(TasksController.class);
final static org.apache.log4j.Logger FileLogger = Logger.getLogger("logger.file");

@Autowired
PersonalTraitsService  personalTraitsservice;

@RequestMapping(value = "/getPersonalTraits", method = RequestMethod.GET , produces = {"application/JSON"})
public ResponseEntity<List<PersonalTrait>> getTechnologies() {
	return new ResponseEntity<List<PersonalTrait>>(personalTraitsservice.getPersonalTraits(),HttpStatus.OK);
}

@RequestMapping(value = "/addPersonalTrait", method = RequestMethod.POST )
public ResponseEntity<Object>  addPersonalTrait(@RequestBody PersonalTrait personalTrait) {
	boolean result=personalTraitsservice.addTrait(personalTrait);
	if(result) {
	return new ResponseEntity<Object>(HttpStatus.OK);
	}else
		return new ResponseEntity<Object>(HttpStatus.BAD_REQUEST);
}

@RequestMapping(value = "/editPersonalTrait", method = RequestMethod.POST )
public ResponseEntity<Object>  editPersonalTrait(@RequestBody PersonalTrait personalTrait) {
	boolean result=personalTraitsservice.editTrait(personalTrait);
	if(result) {
	return new ResponseEntity<Object>(HttpStatus.OK);
	}else
		return new ResponseEntity<Object>(HttpStatus.BAD_REQUEST);
}

@RequestMapping(value = "/deletePersonalTrait", method = RequestMethod.POST )
public ResponseEntity<Object>  deletePersonalTrait(@RequestBody PersonalTrait personalTrait) {
	boolean result=personalTraitsservice.deleteTrait(personalTrait);
	if(result) {
	return new ResponseEntity<Object>(HttpStatus.OK);
	}else
		return new ResponseEntity<Object>(HttpStatus.BAD_REQUEST);
}

}
